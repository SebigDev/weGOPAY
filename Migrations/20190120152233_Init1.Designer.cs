// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using weGOPAY.weGOPAY.Data;

namespace weGOPAY.Migrations
{
    [DbContext(typeof(weGOPAYDbContext))]
    [Migration("20190120152233_Init1")]
    partial class Init1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("weGOPAY.weGOPAY.Core.Models.AccountRequestMap.AccountCreditRequestMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<decimal>("CreditAmount");

                    b.Property<long>("CreditRequestId");

                    b.Property<int>("Currency");

                    b.Property<DateTime>("DateMapped");

                    b.Property<decimal>("PreviousBalance");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("AccountCreditRequestMap");
                });

            modelBuilder.Entity("weGOPAY.weGOPAY.Core.Models.AccountRequestMap.AccountDebitRequestMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<int>("Currency");

                    b.Property<DateTime>("DateMapped");

                    b.Property<decimal>("DebitAmount");

                    b.Property<long>("DebitRequestId");

                    b.Property<decimal>("PreviousBalance");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.ToTable("AccountDebitRequestsMap");
                });

            modelBuilder.Entity("weGOPAY.weGOPAY.Core.Models.Accounts.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AccountCreationDate");

                    b.Property<decimal>("Amount");

                    b.Property<int>("Currency");

                    b.Property<decimal>("EuroBalance");

                    b.Property<decimal>("NairaBalance");

                    b.Property<decimal>("PoundBalance");

                    b.Property<string>("Status");

                    b.Property<decimal>("USDBalance");

                    b.Property<string>("UserId");

                    b.Property<decimal>("YenBalance");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("weGOPAY.weGOPAY.Core.Models.Requests.CreditRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CreditAmount");

                    b.Property<DateTime>("CreditRequestDate");

                    b.Property<string>("Currency");

                    b.Property<decimal>("CurrentBalance");

                    b.Property<string>("RequestStatus");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("CreditRequest");
                });

            modelBuilder.Entity("weGOPAY.weGOPAY.Core.Models.Requests.DebitRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Currency");

                    b.Property<decimal>("CurrentBalance");

                    b.Property<double>("DebitAmount");

                    b.Property<DateTime>("DebitRequestDate");

                    b.Property<string>("RequestStatus");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("DebitRequest");
                });

            modelBuilder.Entity("weGOPAY.weGOPAY.Core.Models.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryOfOrigin");

                    b.Property<string>("CountryOfResidence");

                    b.Property<DateTime>("DateRegistered");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("Fullname");

                    b.Property<string>("Gender");

                    b.Property<bool>("IsUpdated");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Status");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("User");
                });
#pragma warning restore 612, 618
        }
    }
}
